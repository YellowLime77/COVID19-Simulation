﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace myMLApp
{
    public partial class SentimentModel
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"State", @"State"),new InputOutputColumnPair(@"Num of Communities", @"Num of Communities"),new InputOutputColumnPair(@"Num Infected", @"Num Infected"),new InputOutputColumnPair(@"Num Infected Nearby", @"Num Infected Nearby"),new InputOutputColumnPair(@"Times Traveled", @"Times Traveled"),new InputOutputColumnPair(@"Total Spawn Count", @"Total Spawn Count")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"State",@"Num of Communities",@"Num Infected",@"Num Infected Nearby",@"Times Traveled",@"Total Spawn Count"}))      
                                    .Append(mlContext.Regression.Trainers.FastTree(new FastTreeRegressionTrainer.Options(){NumberOfLeaves=2254,MinimumExampleCountPerLeaf=127,NumberOfTrees=12,MaximumBinCountPerFeature=8,FeatureFraction=0.99999999,LearningRate=0.999999776672986,LabelColumnName=@"Outcome",FeatureColumnName=@"Features"}));

            return pipeline;
        }
    }
}
